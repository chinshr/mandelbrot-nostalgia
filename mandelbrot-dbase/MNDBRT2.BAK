*********************************************************************
* Program   :    MNDBRT.PRG
* Author    :    Juergen Fesslmeier
* Version   :    v1.0
* Date      :    11/08/1994
* Info      :    Draws MandelBrot Fractal
*********************************************************************

#DEFINE PALETTEINDEX(i)   (BITOR(01000000,i))
#DEFINE RGB(r,g,b)        (BITOR(r,BITOR(BITLSHIFT(g,8),BITLSHIFT(b,16))))
#DEFINE GetRValue(rgb)    (rgb)
#DEFINE GetGValue(rgb)    (BITRSHIFT(rgb,8))
#DEFINE GetBValue(rgb)    (BITRSHIFT(rgb,16))
#DEFINE MAKEWORD(c)       ASC(SUBSTR(c,1)) + BITLSHIFT(ASC(SUBSTR(c,2)),8)

* Environment Settings
CREATE SESSION
SET TALK OFF
SET ECHO OFF
SET LDCHECK OFF
SET ESCAPE ON

* Declaration
PUBLIC cAppName,cAppVersion,cAppAuthor,oForm,iPixPerTurpinH,iPixPerTurpinV
PUBLIC AreaWidth,AreaHeight,iButtonBottomDist,iBorderBottomDist
       
* Constants
cAppName           = "MandelBrot"
cAppVersion        = "v1.0"
cAppAuthor         = "Juergen Fesslmeier"

* Extern Prototypes
EXTERN CHANDLE  CreateDC(CSTRING, CSTRING, CSTRING, CSTRING) GDI.EXE
EXTERN CHANDLE  GetDC(CHANDLE) USER.EXE
EXTERN CVOID    GetClientRect(CHANDLE, CPTR) USER.EXE
EXTERN CLONG    SetPixel(CHANDLE,CINT,CINT,CLONG) GDI.EXE
EXTERN CHANDLE  GetObject(CHANDLE, CINT, CPTR) GDI.EXE
EXTERN CVOID    Yield(CVOID) KRNL386.EXE

* Run Application
oForm=NEW MNDBRTFORM()
oForm.Open()
RETURN

* Methods
PROCEDURE DrawFractal
PUBLIC hDC                                        && Handle
PUBLIC MaxColumns,MaxRows,MaxColor                && Integer
PUBLIC u,v,n,nmax                                 && Integer
PUBLIC x,y,r,i,d,a,b,delta_a,delta_b,imag_u,;
      imag_o,real_u,real_o,xr,yi                 && Float
PUBLIC cRest

* Evaluate
  cRect = SPACE(8)
  GetClientRect(oForm.DRAWAREA.hWnd,cRect)
* Pixels in Width and Heigth of the area again
  AreaWidth  = MAKEWORD(SUBSTR(cRect, 5)) - MAKEWORD(SUBSTR(cRect, 1)) 
  AreaHeight = MAKEWORD(SUBSTR(cRect, 7)) - MAKEWORD(SUBSTR(cRect, 3)) 

  MaxColumns = AreaWidth
  MaxRows    = AreaHeight
  MaxColor   = 6400
* Get a Display Context
  hDC = GetDC(oForm.DRAWAREA.hWnd)

* Begin Alogorythm
  n=0; nmax=100
  x=0; y=0; r=0; i=0; d=0; v=0; u=0; a=0; b=0; delta_a=0; delta_b=0
  imag_u=-1.25; imag_o=1.25; real_u=-2; real_o=0.5
  xr=0; yi=0
  delta_a=(real_o-real_u)/MaxColumns
  delta_b=(imag_o-imag_u)/MaxRows
  b=imag_u-delta_b
  FOR u=0 TO MaxRows
    b=b+delta_b
    a=real_u-delta_a
    FOR v=0 TO MaxColumns
      a=a+delta_a
      n=0; r=xr; i=yi; d=0
      DO WHILE ((d<4) .AND. (n<>nmax))
        x=r; y=i
        r=x*x-y*y+a; i=2*x*y+b
        d=r*r+i*i
        n=n+1
      ENDDO
      IF n=nmax
        SetPixel(hDC,v,u,0)
      ELSE  
        SetPixel(hDC,v,u,RGB((MaxColor-MOD(n,MaxColor)+1)^2,;
        (MaxColor-MOD(n,MaxColor)+1)^2,(MaxColor-MOD(n,MaxColor)+1)^2))
      ENDIF  
    NEXT
  NEXT
RETURN

PROCEDURE SizeProberties
LOCAL TempHeight
  TempHeight              = oForm.Height-iBorderBottomDist-oForm.BORDER.Top-;
                            2*(oForm.DRAWAREA.Top-oForm.BORDER.Top)
  IF TempHeight>0.5                            
    oForm.BORDER.Width      = oForm.Width-2*(oForm.BORDER.Left)
    oForm.BORDER.Height     = oForm.Height-oForm.BORDER.Top-iBorderBottomDist
    oForm.DRAWAREA.Width    = oForm.Width-2*(oForm.DRAWAREA.Left)
    oForm.DRAWAREA.Height   = TempHeight
    oForm.ACTIONBUTTON.Top  = oForm.Height-iButtonBottomDist-;
                              oForm.ACTIONBUTTON.Height
    oForm.ACTIONBUTTON.Left = (oForm.Width-oForm.ACTIONBUTTON.Width)/2
  ENDIF  
RETURN

* Class Definition
CLASS MNDBRTFORM OF FORM
   THIS.Text     = cAppName+" "+cAppVersion
   THIS.HelpFile = ""
   THIS.HelpId   = ""
   THIS.EscExit  = .T.
   THIS.MDI      = .F.
   THIS.Top      = 2.7646
   THIS.Left     = 22.5
   THIS.Width    = 45.666
   THIS.Height   = 14.7051
   THIS.OnOpen   = CLASS::Form_OnOpen
   THIS.OnSize   = CLASS::Form_OnSize

   NEW RECTANGLE (THIS,"BORDER")
     THIS.BORDER.ColorNormal      = "N/W"
     THIS.BORDER.Text             = ""
     THIS.BORDER.Border           = .T.
     THIS.BORDER.Top              = 0.4111
     THIS.BORDER.Left             = 1
     THIS.BORDER.Width            = 43.5
     THIS.BORDER.Height           = 11
     THIS.BORDER.BorderStyle      = 2

   NEW PUSHBUTTON (THIS,"ACTIONBUTTON")
     THIS.ACTIONBUTTON.Group       = .T.
     THIS.ACTIONBUTTON.Height      = 2
     THIS.ACTIONBUTTON.Left        = 15
     THIS.ACTIONBUTTON.Top         = 12
     THIS.ACTIONBUTTON.UpBitmap    = "RESOURCE #617"
     THIS.ACTIONBUTTON.Text        = "&Start"
     THIS.ACTIONBUTTON.Width       = 14
     THIS.ACTIONBUTTON.ColorNormal = "N/W"
     THIS.ACTIONBUTTON.FontBold    = .F.
     THIS.ACTIONBUTTON.OnClick     = CLASS::Start_OnClick

   NEW IMAGE (THIS,"DRAWAREA")
     THIS.DRAWAREA.Datasource     = ""
     THIS.DRAWAREA.Top            = 0.6465
     THIS.DRAWAREA.Left           = 1.666
     THIS.DRAWAREA.Width          = 42.167
     THIS.DRAWAREA.Height         = 10.5293

   PROCEDURE Form_OnOpen
     LOCAL cRect
     cRect = SPACE(8)
     GetClientRect(THIS.DRAWAREA.hWnd,cRect)
   * Pixels in Width and Heigth of the area  
     AreaWidth  = MAKEWORD(SUBSTR(cRect, 5)) - MAKEWORD(SUBSTR(cRect, 1)) 
     AreaHeight = MAKEWORD(SUBSTR(cRect, 7)) - MAKEWORD(SUBSTR(cRect, 3)) 
   * Calculation Pixel/Turpin
     iPixPerTurpinH=AreaWidth/THIS.DRAWAREA.WIDTH
     iPixPerTurpinV=AreaHeight/THIS.DRAWAREA.HEIGHT
     iButtonBottomDist=THIS.Height-THIS.ACTIONBUTTON.Height-THIS.ACTIONBUTTON.Top
     iBorderBottomDist=THIS.Height-THIS.BORDER.Height-THIS.BORDER.Top
   RETURN

   PROCEDURE Start_OnClick
     PRIVAT oTimer
   * Change Button Proberties
     oForm.ACTIONBUTTON.Text     = "&Close"
     oForm.ACTIONBUTTON.UpBitmap = "RESOURCE #28"
     oForm.ACTIONBUTTON.OnClick  = CLASS::Close_OnClick
   * Draw the fractal  
     oTimer=NEW Timer()
     oTimer.Interval=.1
     oTimer.OnTimer={;DrawFractal()}
     oTimer.Enabled=.T.
   RETURN

   PROCEDURE Form_OnSize(nType, width, height)
     SizeProberties()
   RETURN
   
   PROCEDURE Close_OnClick
     oForm.Close()
   RETURN
   
ENDCLASS
