#ifndef fractal_s_h_included
#define fractal_s_h_included
/*
 * Server Proxy Procededure Header for dce
 * for language C, version (1.0)
 * generated by Entera IDL version (1.0)
 * on Fri Sep 04 21:01:47 1998
 *
 * Interface:
 * file name: fractal.idl
 * name: fractal
 * uuid: 61a740ae-9699-11d1-aa8b-00c04fb17a3a version(1.1)
 *
 * Service Interface:
 * file name: fractal.idl
 */

#ifndef _MACINTOSH_
#include <dce/idlbase.h>
#include <dce/rpc.h>
#include <dce/nbase.h>
#else  /* _MACINTOSH_ */
#include "dce/idlbase.h"
#include "dce/rpc.h"
#include "dce/nbase.h"
#endif /* _MACINTOSH_ */
#include "ode.h"
#include "odeutype.h"
#include "odecmn.h"

#ifndef ODE_EXPORT_CALL
#   define ODE_EXPORT_CALL
#endif
typedef unsigned32 hndl_t;
typedef struct 
{
	double   imag_min;
	double   imag_max;
	double   real_min;
	double   real_max;
} 	mndset_t;

typedef struct 
{
	idl_char   *hostname;
	idl_char   *infrastructur;
	idl_char   *lan;
	signed16   width;
	signed16   height;
	idl_byte   iterations;
	mndset_t   mndset;
	unsigned32   rpc_requests;
	unsigned32   bytes_received;
	unsigned32   bytes_sent;
	unsigned32   rpc_time;
} 	client_data_t;

typedef struct 
{
	idl_char   *hostname;
	unsigned16   handles;
	unsigned32   rpc_requests;
	unsigned32   bytes_received;
	unsigned32   bytes_sent;
	unsigned32   rpc_time;
} 	server_data_t;

typedef struct fractal_t
{
	unsigned32   handle;
	signed16   width;
	signed16   height;
	idl_byte   iterator;
	double   x;
	double   y;
	double   r;
	double   i;
	signed32   d;
	signed32   v;
	signed32   u;
	double   a;
	mndset_t   mndset;
	double   xr;
	double   yi;
	double   delta_a;
	double   delta_b;
	double   b;
	client_data_t   client_data;
	struct fractal_t   *next;
} 	fractal_t;


#ifdef __cplusplus
extern "C" {
#endif

rpc_if_handle_t ode_svr_ifspec_fractal_1_1(error_status_t* odepStatus);

int initialize_fractal (int argc, char**argv);
void finalize_fractal ();
unsigned32 ODE_EXPORT_CALL open
(
	client_data_t   cd
);

client_data_t ODE_EXPORT_CALL close
(
	unsigned32   handle
);

signed32 ODE_EXPORT_CALL get_next
(
	unsigned32   handle,
	signed32   *outwidth,
	idl_byte**	row
);

signed32 ODE_EXPORT_CALL query_server
(
	server_data_t   *server_data
);

void ode_dstb_register_fractal_1_1 (char* paDedicatedArgs, error_status_t *odepStatus);

#ifdef __cplusplus
}
#endif

#endif /* fractal_s_h_included */
